apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: grafana
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: https://kubernetes.default.svc
  template:
    metadata:
      name: grafana
    spec:
      project: "system"
      source:
        repoURL: 'https://grafana.github.io/helm-charts'
        chart: grafana
        targetRevision: 8.14.1
        helm:
          releaseName: grafana
          valuesObject:

            adminUser: admin
            adminPassword: prom-operator        
                    
            persistence:
                enabled: true
                size: 10Gi

            initChownData:
                enabled: false

            datasources:
              datasources.yaml:
                apiVersion: 1
                datasources:
                  - name: Loki
                    type: loki
                    access: proxy
                    url: http://loki-gateway.loki.svc.cluster.local
                    isDefault: false
                    jsonData:
                      maxLines: 1000
                      derivedFields:
                      - datasourceName: Tempo
                        datasourceUid: Tempo
                        matcherRegex: '\\"traceID\\":\\"([^\\"]+)\\"'
                        name: traceID
                        url: $${__value.raw}

                  - name: Tempo
                    type: tempo
                    access: proxy
                    url: http://tempo-gateway.tempo.svc.cluster.local
                    basicAuth: false
                    jsonData:
                      tracesToMetrics:
                        datasourceUid: 'Prometheus'
                      tracesToLogs:
                        datasourceUid: 'Loki'
                      serviceMap:
                        datasourceUid: 'Prometheus'
                      nodeGraph:
                        enabled: true


                  - name: Prometheus
                    type: prometheus
                    access: proxy
                    url: http://prometheus-server.prometheus.svc.cluster.local:80
                    isDefault: true

                  - name: Mimir
                    type: prometheus
                    access: proxy
                    url: http://prometheus-server.prometheus.svc.cluster.local:80
                    # jsonData:
                    #   prometheusType: Mimir


      destination:
        server: '{{ cluster }}'
        namespace: grafana
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated: {}