# apiVersion: monitoring.coreos.com/v1
# kind: PodMonitor
# metadata:
#   name: generic-stats-monitor
#   namespace: prometheus
#   labels:
#     monitoring: istio-proxies
#     release: istio
# spec:
#   selector:
#     matchExpressions:
#     - {key: istio-prometheus-ignore, operator: DoesNotExist}
#   namespaceSelector:
#     any: true
#   jobLabel: generic-stats
#   podMetricsEndpoints:
#   - path: /metrics
#     interval: 15s
#     relabelings:
#     - action: keep
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: istio-monitor
#   namespace: prometheus
#   labels:
#     release: prometheus
# spec:
#   namespaceSelector:
#     any: true
#   selector:
#     matchLabels:
#       istio: pilot 
#   endpoints:
#   - port: http-monitoring
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: PodMonitor
# metadata:
#   name: envoy-sidecars
#   namespace: istio-system
# spec:
#   selector:
#     matchLabels:
#       istio-proxy: enabled  # Isso captura todos os Pods com sidecar do Istio
#   namespaceSelector:
#     any: true  # Coletar m√©tricas de todos os namespaces
#   podMetricsEndpoints:
#     - port: http-envoy-prom
#       path: /stats/prometheus
#       interval: 15s
#       scrapeTimeout: 10s
#       relabelings:
#         - sourceLabels: [__meta_kubernetes_pod_label_istio_io_rev]
#           action: keep
#           regex: .+

# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: istio-ingress-monitor
#   namespace: prometheus
#   labels:
#     release: prometheus
# spec:
#   namespaceSelector:
#     any: true
#   selector:
#     matchLabels:
#       istio: ingress 
#   endpoints:
#   - port: http-monitoring
# ---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: istio-envoy-monitor
#   namespace: prometheus
# spec:
#   namespaceSelector:
#     any: true
#   selector:
#     matchExpressions:
#     - {key: app, operator: Exists}
#   endpoints:
#   - targetPort: 15090
#     interval: 15s
#     path: /stats/prometheus
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: envoy-stats-monitor
  namespace: istio-system
  labels:
    monitoring: istio-proxies
    release: istio
spec:
  selector:
    matchExpressions:
    - {key: istio-prometheus-ignore, operator: DoesNotExist}
  namespaceSelector:
    any: true
  jobLabel: envoy-stats
  podMetricsEndpoints:
  - path: /stats/prometheus
    interval: 15s
    relabelings:
    - action: keep
      sourceLabels: [__meta_kubernetes_pod_container_name]
      regex: "istio-proxy"
    - action: keep
      sourceLabels: [__meta_kubernetes_pod_annotationpresent_prometheus_io_scrape]
    - action: replace
      regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
      replacement: '[$2]:$1'
      sourceLabels:
      - __meta_kubernetes_pod_annotation_prometheus_io_port
      - __meta_kubernetes_pod_ip
      targetLabel: __address__
    - action: replace
      regex: (\d+);((([0-9]+?)(\.|$)){4})
      replacement: $2:$1
      sourceLabels:
      - __meta_kubernetes_pod_annotation_prometheus_io_port
      - __meta_kubernetes_pod_ip
      targetLabel: __address__
    - action: labeldrop
      regex: "__meta_kubernetes_pod_label_(.+)"
    - sourceLabels: [__meta_kubernetes_namespace]
      action: replace
      targetLabel: namespace
    - sourceLabels: [__meta_kubernetes_pod_name]
      action: replace
      targetLabel: pod_name
---
# apiVersion: monitoring.coreos.com/v1
# kind: ServiceMonitor
# metadata:
#   name: istio-component-monitor
#   namespace: istio-system
#   labels:
#     monitoring: istio-components
#     release: istio
# spec:
#   jobLabel: istio
#   targetLabels: [app]
#   selector:
#     matchExpressions:
#     - {key: istio, operator: In, values: [pilot]}
#   namespaceSelector:
#     any: true
#   endpoints:
#   - port: http-monitoring
#     interval: 15s