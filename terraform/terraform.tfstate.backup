{
  "version": 4,
  "terraform_version": "1.10.3",
  "serial": 214,
  "lineage": "b5ebbf91-a35b-9751-8b0f-51f1c287f8df",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argo_events",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-events",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argo-events",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.9.5",
                "chart": "argo-events",
                "first_deployed": 1743642719,
                "last_deployed": 1743642719,
                "name": "argo-events",
                "namespace": "argo-events",
                "notes": "",
                "revision": 1,
                "values": "{}",
                "version": "2.4.14"
              }
            ],
            "name": "argo-events",
            "namespace": "argo-events",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "2.4.14",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argo_rollouts",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-rollouts",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argo-rollouts",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.6.4",
                "chart": "argo-rollouts",
                "first_deployed": 1738328446,
                "last_deployed": 1738328446,
                "name": "argo-rollouts",
                "namespace": "argo-rollouts",
                "notes": "",
                "revision": 1,
                "values": "{\"controller\":{\"metrics\":{\"enabled\":true}},\"dashboard\":{\"enabled\":false},\"podAnnotations\":{\"prometheus.io/path\":\"/metrics\",\"prometheus.io/port\":8090,\"prometheus.io/scrape\":true}}",
                "version": "2.34.1"
              }
            ],
            "name": "argo-rollouts",
            "namespace": "argo-rollouts",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "controller.metrics.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "dashboard.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "podAnnotations.prometheus\\.io/path",
                "type": "",
                "value": "/metrics"
              },
              {
                "name": "podAnnotations.prometheus\\.io/port",
                "type": "",
                "value": "8090"
              },
              {
                "name": "podAnnotations.prometheus\\.io/scrape",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "2.34.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argo_workflows",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-workflows",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argo-workflows",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v3.6.5",
                "chart": "argo-workflows",
                "first_deployed": 1743625519,
                "last_deployed": 1743627038,
                "name": "argo-workflows",
                "namespace": "argo-workflows",
                "notes": "\n\n1. Get Argo Server external IP/domain by running:\n\nkubectl --namespace argo-workflows get services -o wide | grep argo-workflows-server\n\n2. Submit the hello-world workflow by running:\n\nargo submit https://raw.githubusercontent.com/argoproj/argo-workflows/master/examples/hello-world.yaml --watch\n",
                "revision": 3,
                "values": "{\"server\":{\"authModes\":[\"server\"]},\"workflow\":{\"serviceAccount\":{\"create\":true}}}",
                "version": "0.45.11"
              }
            ],
            "name": "argo-workflows",
            "namespace": "argo-workflows",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "server.authModes[0]",
                "type": "",
                "value": "server"
              },
              {
                "name": "workflow.serviceAccount.create",
                "type": "",
                "value": "true"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "0.45.11",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.13.4",
                "chart": "argo-cd",
                "first_deployed": 1738287693,
                "last_deployed": 1738287693,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "In order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 1,
                "values": "{\"server\":{\"enable\":{\"proxy\":{\"extension\":true}},\"extensions\":{\"enabled\":true,\"extensionList\":[{\"env\":[{\"name\":\"EXTENSION_URL\",\"value\":\"https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.6/extension.tar\"}],\"name\":\"rollout-extension\"}],\"image\":{\"repository\":\"quay.io/argoprojlabs/argocd-extension-installer\"}},\"extraArgs\":[\"--insecure\"]}}",
                "version": "7.7.22"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "server.enable.proxy.extension",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.extensions.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.extensions.extensionList[0].env[0].name",
                "type": "",
                "value": "EXTENSION_URL"
              },
              {
                "name": "server.extensions.extensionList[0].env[0].value",
                "type": "",
                "value": "https://github.com/argoproj-labs/rollout-extension/releases/download/v0.3.6/extension.tar"
              },
              {
                "name": "server.extensions.extensionList[0].name",
                "type": "",
                "value": "rollout-extension"
              },
              {
                "name": "server.extensions.image.repository",
                "type": "",
                "value": "quay.io/argoprojlabs/argocd-extension-installer"
              },
              {
                "name": "server.extraArgs[0]",
                "type": "",
                "value": "--insecure"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "7.7.22",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istio_base",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "base",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-base",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.24.2",
                "chart": "base",
                "first_deployed": 1738709909,
                "last_deployed": 1738709909,
                "name": "istio-base",
                "namespace": "istio-system",
                "notes": "Istio base successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio-base -n istio-system\n  $ helm get all istio-base -n istio-system\n",
                "revision": 1,
                "values": "{}",
                "version": "1.24.2"
              }
            ],
            "name": "istio-base",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.24.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istio_ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "gateway",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio-ingressgateway",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.24.2",
                "chart": "gateway",
                "first_deployed": 1738709925,
                "last_deployed": 1738709925,
                "name": "istio-ingressgateway",
                "namespace": "istio-system",
                "notes": "\"istio-ingressgateway\" successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio-ingressgateway -n istio-system\n  $ helm get all istio-ingressgateway -n istio-system\n\nNext steps:\n  * Deploy an HTTP Gateway: https://istio.io/latest/docs/tasks/traffic-management/ingress/ingress-control/\n  * Deploy an HTTPS Gateway: https://istio.io/latest/docs/tasks/traffic-management/ingress/secure-ingress/\n",
                "revision": 1,
                "values": "{\"autoscaling\":{\"maxReplicas\":6,\"minReplicas\":2},\"service\":{\"ports\":[{\"name\":\"status-port\",\"nodePort\":30021,\"port\":15021,\"protocol\":\"TCP\",\"targetPort\":15021},{\"name\":\"http2\",\"nodePort\":30080,\"port\":80,\"protocol\":\"TCP\",\"targetPort\":80},{\"name\":\"https\",\"nodePort\":30443,\"port\":443,\"protocol\":\"TCP\",\"targetPort\":443}],\"type\":\"NodePort\"}}",
                "version": "1.24.2"
              }
            ],
            "name": "istio-ingressgateway",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "autoscaling.maxReplicas",
                "type": "",
                "value": "6"
              },
              {
                "name": "autoscaling.minReplicas",
                "type": "",
                "value": "2"
              },
              {
                "name": "service.ports[0].name",
                "type": "",
                "value": "status-port"
              },
              {
                "name": "service.ports[0].nodePort",
                "type": "",
                "value": "30021"
              },
              {
                "name": "service.ports[0].port",
                "type": "",
                "value": "15021"
              },
              {
                "name": "service.ports[0].protocol",
                "type": "",
                "value": "TCP"
              },
              {
                "name": "service.ports[0].targetPort",
                "type": "",
                "value": "15021"
              },
              {
                "name": "service.ports[1].name",
                "type": "",
                "value": "http2"
              },
              {
                "name": "service.ports[1].nodePort",
                "type": "",
                "value": "30080"
              },
              {
                "name": "service.ports[1].port",
                "type": "",
                "value": "80"
              },
              {
                "name": "service.ports[1].protocol",
                "type": "",
                "value": "TCP"
              },
              {
                "name": "service.ports[1].targetPort",
                "type": "",
                "value": "80"
              },
              {
                "name": "service.ports[2].name",
                "type": "",
                "value": "https"
              },
              {
                "name": "service.ports[2].nodePort",
                "type": "",
                "value": "30443"
              },
              {
                "name": "service.ports[2].port",
                "type": "",
                "value": "443"
              },
              {
                "name": "service.ports[2].protocol",
                "type": "",
                "value": "TCP"
              },
              {
                "name": "service.ports[2].targetPort",
                "type": "",
                "value": "443"
              },
              {
                "name": "service.type",
                "type": "",
                "value": "NodePort"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.24.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "istiod",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "istiod",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "istio",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.24.2",
                "chart": "istiod",
                "first_deployed": 1738709914,
                "last_deployed": 1741209966,
                "name": "istio",
                "namespace": "istio-system",
                "notes": "\"istiod\" successfully installed!\n\nTo learn more about the release, try:\n  $ helm status istio -n istio-system\n  $ helm get all istio -n istio-system\n\nNext steps:\n  * Deploy a Gateway: https://istio.io/latest/docs/setup/additional-setup/gateway/\n  * Try out our tasks to get started on common configurations:\n    * https://istio.io/latest/docs/tasks/traffic-management\n    * https://istio.io/latest/docs/tasks/security/\n    * https://istio.io/latest/docs/tasks/policy-enforcement/\n  * Review the list of actively supported releases, CVE publications and our hardening guide:\n    * https://istio.io/latest/docs/releases/supported-releases/\n    * https://istio.io/latest/news/security/\n    * https://istio.io/latest/docs/ops/best-practices/security/\n\nFor further documentation see https://istio.io website",
                "revision": 2,
                "values": "{\"meshConfig\":{\"defaultConfig\":{\"tracing\":{\"zipkin\":{\"address\":\"jaeger-collector.tracing.svc.cluster.local:9411\"}}},\"enableTracing\":true},\"sidecarInjectorWebhook\":{\"rewriteAppHTTPProbe\":false}}",
                "version": "1.24.2"
              }
            ],
            "name": "istio",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://istio-release.storage.googleapis.com/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "meshConfig.defaultConfig.tracing.zipkin.address",
                "type": "",
                "value": "jaeger-collector.tracing.svc.cluster.local:9411"
              },
              {
                "name": "meshConfig.enableTracing",
                "type": "",
                "value": "true"
              },
              {
                "name": "sidecarInjectorWebhook.rewriteAppHTTPProbe",
                "type": "",
                "value": "false"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.24.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "kiali-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kiali-server",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "kiali-server",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.5.0",
                "chart": "kiali-server",
                "first_deployed": 1738709924,
                "last_deployed": 1741526999,
                "name": "kiali-server",
                "namespace": "istio-system",
                "notes": "Welcome to Kiali! For more details on Kiali, see: https://kiali.io\n\nThe Kiali Server [v2.5.0] has been installed in namespace [istio-system]. It will be ready soon.\n\nWhen installing with \"deployment.cluster_wide_access=false\" using this Kiali Server Helm Chart,\nit is your responsibility to manually create the proper Roles and RoleBindings for the Kiali Server\nto have the correct permissions to access the service mesh namespaces.\n\n(Helm: Chart=[kiali-server], Release=[kiali-server], Version=[2.5.0])\n",
                "revision": 8,
                "values": "{\"auth\":{\"strategy\":\"anonymous\"},\"external_services\":{\"grafana\":{\"auth\":{\"insecure_skip_verify\":true,\"password\":\"prom-operator\",\"type\":\"basic\",\"username\":\"admin\"},\"dashboards\":[{\"name\":\"Istio Mesh Dashboard\"},{\"name\":\"Istio Service Dashboard\",\"variables\":{\"namespace\":\"var-namespace\",\"service\":\"var-service\"}},{\"name\":\"Istio Workload Dashboard\",\"variables\":{\"namespace\":\"var-namespace\",\"workload\":\"var-workload\"}},{\"name\":\"Istio Performance Dashboard\"},{\"name\":\"Istio Wasm Extension Dashboard\"}],\"enabled\":true,\"external_url\":\"http://grafana.homelab.msfidelis.com.br\",\"internal_url\":\"http://prometheus-grafana.prometheus.svc.cluster.local:80\"},\"prometheus\":{\"url\":\"http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090\"},\"tracing\":{\"enabled\":true,\"external_url\":\"http://jaeger.homelab.msfidelis.com.br\",\"internal_url\":\"http://jaeger-query.tracing.svc.cluster.local:16686\",\"use_grpc\":false}},\"server\":{\"web_fqdn\":\"kiali.homelab.msfidelis.com.br\"}}",
                "version": "2.5.0"
              }
            ],
            "name": "kiali-server",
            "namespace": "istio-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kiali.org/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "auth.strategy",
                "type": "",
                "value": "anonymous"
              },
              {
                "name": "external_services.grafana.auth.insecure_skip_verify",
                "type": "",
                "value": "true"
              },
              {
                "name": "external_services.grafana.auth.password",
                "type": "",
                "value": "prom-operator"
              },
              {
                "name": "external_services.grafana.auth.type",
                "type": "",
                "value": "basic"
              },
              {
                "name": "external_services.grafana.auth.username",
                "type": "",
                "value": "admin"
              },
              {
                "name": "external_services.grafana.dashboards[0].name",
                "type": "",
                "value": "Istio Mesh Dashboard"
              },
              {
                "name": "external_services.grafana.dashboards[1].name",
                "type": "",
                "value": "Istio Service Dashboard"
              },
              {
                "name": "external_services.grafana.dashboards[1].variables.namespace",
                "type": "",
                "value": "var-namespace"
              },
              {
                "name": "external_services.grafana.dashboards[1].variables.service",
                "type": "",
                "value": "var-service"
              },
              {
                "name": "external_services.grafana.dashboards[2].name",
                "type": "",
                "value": "Istio Workload Dashboard"
              },
              {
                "name": "external_services.grafana.dashboards[2].variables.namespace",
                "type": "",
                "value": "var-namespace"
              },
              {
                "name": "external_services.grafana.dashboards[2].variables.workload",
                "type": "",
                "value": "var-workload"
              },
              {
                "name": "external_services.grafana.dashboards[3].name",
                "type": "",
                "value": "Istio Performance Dashboard"
              },
              {
                "name": "external_services.grafana.dashboards[4].name",
                "type": "",
                "value": "Istio Wasm Extension Dashboard"
              },
              {
                "name": "external_services.grafana.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "external_services.grafana.external_url",
                "type": "",
                "value": "http://grafana.homelab.msfidelis.com.br"
              },
              {
                "name": "external_services.grafana.internal_url",
                "type": "",
                "value": "http://prometheus-grafana.prometheus.svc.cluster.local:80"
              },
              {
                "name": "external_services.prometheus.url",
                "type": "",
                "value": "http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090"
              },
              {
                "name": "external_services.tracing.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "external_services.tracing.external_url",
                "type": "",
                "value": "http://jaeger.homelab.msfidelis.com.br"
              },
              {
                "name": "external_services.tracing.internal_url",
                "type": "",
                "value": "http://jaeger-query.tracing.svc.cluster.local:16686"
              },
              {
                "name": "external_services.tracing.use_grpc",
                "type": "",
                "value": "false"
              },
              {
                "name": "server.web_fqdn",
                "type": "",
                "value": "kiali.homelab.msfidelis.com.br"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "2.5.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.63.0",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1742756970,
                "last_deployed": 1742756970,
                "name": "prometheus",
                "namespace": "prometheus",
                "notes": "kube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.prometheus.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace prometheus -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace prometheus $POD_NAME 9100\nkube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace prometheus get pods -l \"release=prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace prometheus prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.prometheus.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace prometheus -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace prometheus port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n",
                "revision": 1,
                "values": "{\"grafana\":{\"persistence\":{\"accessModes\":[\"ReadWriteOnce\"],\"enabled\":true,\"size\":\"1Gi\",\"storageClassName\":\"local-path\"}},\"kubeStateMetrics\":{\"enabled\":true},\"prometheus\":{\"prometheusSpec\":{\"podMonitorNamespaceSelector\":{},\"podMonitorSelector\":{},\"podMonitorSelectorNilUsesHelmValues\":false,\"ruleNamespaceSelector\":{},\"ruleSelector\":{},\"ruleSelectorNilUsesHelmValues\":false,\"serviceMonitorNamespaceSelector\":{},\"serviceMonitorSelector\":{},\"serviceMonitorSelectorNilUsesHelmValues\":false}},\"prometheusOperator\":{\"alertmanagerInstanceNamespaces\":\"\",\"denyNamespaces\":\"\",\"enabled\":true,\"namespaces\":\"\",\"prometheusInstanceNamespaces\":\"\",\"thanosRulerInstanceNamespaces\":\"\"}}",
                "version": "45.8.0"
              }
            ],
            "name": "prometheus",
            "namespace": "prometheus",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "prometheus:\n  prometheusSpec:\n    podMonitorNamespaceSelector: {}\n    podMonitorSelector: {}\n    podMonitorSelectorNilUsesHelmValues: false\n    ruleNamespaceSelector: {}\n    ruleSelector: {}\n    ruleSelectorNilUsesHelmValues: false\n    serviceMonitorNamespaceSelector: {}\n    serviceMonitorSelector: {}\n    serviceMonitorSelectorNilUsesHelmValues: false\n\nkubeStateMetrics:\n  enabled: true\n\nprometheusOperator:\n  enabled: true\n  namespaces: ''\n  denyNamespaces: ''\n  prometheusInstanceNamespaces: ''\n  alertmanagerInstanceNamespaces: ''\n  thanosRulerInstanceNamespaces: ''\n\ngrafana:\n  persistence:\n    enabled: true\n    storageClassName: \"local-path\"\n    accessModes:\n      - ReadWriteOnce\n    size: 1Gi"
            ],
            "verify": false,
            "version": "45.8.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_events_event_bus",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "argoproj.io/v1alpha1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/argoproj.io/v1alpha1/namespaces/argo-events/eventbuses/default",
            "ignore_fields": null,
            "kind": "EventBus",
            "live_manifest_incluster": "5f0ca6518b23029a7ffca57697205e31214ea460a55bad071f78ab046a1c1125",
            "live_uid": "0605139c-96df-4032-bc89-0e4d48bd1dd1",
            "name": "default",
            "namespace": "argo-events",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0605139c-96df-4032-bc89-0e4d48bd1dd1",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: argoproj.io/v1alpha1\nkind: EventBus\nmetadata:\n  name: default\n  namespace: argo-events\nspec:\n  jetstream:\n    version: latest\n",
            "yaml_body_parsed": "apiVersion: argoproj.io/v1alpha1\nkind: EventBus\nmetadata:\n  name: default\n  namespace: argo-events\nspec:\n  jetstream:\n    version: latest\n",
            "yaml_incluster": "5f0ca6518b23029a7ffca57697205e31214ea460a55bad071f78ab046a1c1125"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argo_events"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_events_role",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1/namespaces/argocd/roles/argo-events-operation-role",
            "ignore_fields": null,
            "kind": "Role",
            "live_manifest_incluster": "8665ceefb666369022c7218ae29dd1d7361691725a802f9d012718872d980ede",
            "live_uid": "87a5fe07-d897-46f2-894e-75a29a126bef",
            "name": "argo-events-operation-role",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "87a5fe07-d897-46f2-894e-75a29a126bef",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: argo-events-operation-role\n  namespace: argocd\nrules:\n  - apiGroups: [\"argoproj.io\"]\n    resources: [\"applicationsets\"]\n    verbs: [\"get\", \"list\", \"watch\"]\n  - apiGroups: [\"argoproj.io\"]\n    resources: [\"workflows\"]\n    verbs: [\"*\"]\n",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: argo-events-operation-role\n  namespace: argocd\nrules:\n- apiGroups:\n  - argoproj.io\n  resources:\n  - applicationsets\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - argoproj.io\n  resources:\n  - workflows\n  verbs:\n  - '*'\n",
            "yaml_incluster": "8665ceefb666369022c7218ae29dd1d7361691725a802f9d012718872d980ede"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argo_events"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_events_role_binding",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1/namespaces/argocd/rolebindings/argo-events-operation-role-binding",
            "ignore_fields": null,
            "kind": "RoleBinding",
            "live_manifest_incluster": "e3e88bfec7dcaed9b1f327b84c1c0eac00cd6f1aa9d615dfb7eacbfb24668ad9",
            "live_uid": "e3e1db7d-27a3-4d76-acc9-e85b00b69543",
            "name": "argo-events-operation-role-binding",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "e3e1db7d-27a3-4d76-acc9-e85b00b69543",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: argo-events-operation-role-binding\n  namespace: argocd\nsubjects:\n  - kind: ServiceAccount\n    name: default\n    namespace: argo-events\nroleRef:\n  kind: Role\n  name: argo-events-operation-role\n  apiGroup: rbac.authorization.k8s.io\n",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: argo-events-operation-role-binding\n  namespace: argocd\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: argo-events-operation-role\nsubjects:\n- kind: ServiceAccount\n  name: default\n  namespace: argo-events\n",
            "yaml_incluster": "e3e88bfec7dcaed9b1f327b84c1c0eac00cd6f1aa9d615dfb7eacbfb24668ad9"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argo_events",
            "kubectl_manifest.argo_events_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_events_workflow_role",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1/namespaces/argo-workflows/roles/argo-events-operation-workflows-role",
            "ignore_fields": null,
            "kind": "Role",
            "live_manifest_incluster": "89e53604f800b1da0ec6a0f414a023b80e0ce2a33aedf4e8c98d3b4cc9ab785e",
            "live_uid": "0c8d8b71-5614-407a-9bf3-8875f6296e9a",
            "name": "argo-events-operation-workflows-role",
            "namespace": "argo-workflows",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "0c8d8b71-5614-407a-9bf3-8875f6296e9a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: argo-events-operation-workflows-role\n  namespace: argo-workflows\nrules:\n  - apiGroups: [\"argoproj.io\"]\n    resources: [\"workflows\"]\n    verbs: [\"*\"]\n",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: argo-events-operation-workflows-role\n  namespace: argo-workflows\nrules:\n- apiGroups:\n  - argoproj.io\n  resources:\n  - workflows\n  verbs:\n  - '*'\n",
            "yaml_incluster": "89e53604f800b1da0ec6a0f414a023b80e0ce2a33aedf4e8c98d3b4cc9ab785e"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argo_events"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_events_workflow_role_binding",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "rbac.authorization.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/rbac.authorization.k8s.io/v1/namespaces/argo-workflows/rolebindings/argo-events-operation-workflows-role-binding",
            "ignore_fields": null,
            "kind": "RoleBinding",
            "live_manifest_incluster": "d8c5a3a7ca92d68014d729219085914741beb89af78ed77714b424ce53095749",
            "live_uid": "1ed1e189-2352-4a57-b680-e9211591b88a",
            "name": "argo-events-operation-workflows-role-binding",
            "namespace": "argo-workflows",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "1ed1e189-2352-4a57-b680-e9211591b88a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: argo-events-operation-workflows-role-binding\n  namespace: argo-workflows\nsubjects:\n  - kind: ServiceAccount\n    name: default\n    namespace: argo-events\nroleRef:\n  kind: Role\n  name: argo-events-operation-workflows-role\n  apiGroup: rbac.authorization.k8s.io\n",
            "yaml_body_parsed": "apiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: argo-events-operation-workflows-role-binding\n  namespace: argo-workflows\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: argo-events-operation-workflows-role\nsubjects:\n- kind: ServiceAccount\n  name: default\n  namespace: argo-events\n",
            "yaml_incluster": "d8c5a3a7ca92d68014d729219085914741beb89af78ed77714b424ce53095749"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argo_events",
            "kubectl_manifest.argo_events_workflow_role"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_gateway",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/argocd/gateways/argocd-gateway",
            "ignore_fields": null,
            "kind": "Gateway",
            "live_manifest_incluster": "4a7fc6319469db7f0bc092bfc984033b33743754c62a22b5f8bcda9d68d49960",
            "live_uid": "9bcb45eb-5f91-440b-a23e-c33fb3ce6753",
            "name": "argocd-gateway",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "9bcb45eb-5f91-440b-a23e-c33fb3ce6753",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: argocd-gateway\n  namespace: argocd\nspec:\n  selector:\n    istio: ingressgateway \n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - argocd.homelab.msfidelis.com.br\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: argocd-gateway\n  namespace: argocd\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - argocd.homelab.msfidelis.com.br\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n",
            "yaml_incluster": "4a7fc6319469db7f0bc092bfc984033b33743754c62a22b5f8bcda9d68d49960"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_workflows_gateway",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/argo-workflows/gateways/argo-workflows-server",
            "ignore_fields": null,
            "kind": "Gateway",
            "live_manifest_incluster": "0a3f0a85a2e27f632a384389a36aecae206f605e7553303e3d5e25796c39fe45",
            "live_uid": "ed3fea75-0783-4da1-84f6-2e437e8da588",
            "name": "argo-workflows-server",
            "namespace": "argo-workflows",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "ed3fea75-0783-4da1-84f6-2e437e8da588",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: argo-workflows-server\n  namespace: argo-workflows\nspec:\n  selector:\n    istio: ingressgateway \n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - argo-workflows.homelab.msfidelis.com.br\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: argo-workflows-server\n  namespace: argo-workflows\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - argo-workflows.homelab.msfidelis.com.br\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n",
            "yaml_incluster": "0a3f0a85a2e27f632a384389a36aecae206f605e7553303e3d5e25796c39fe45"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argo_workflows"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argo_workflows_virtual_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/argo-workflows/virtualservices/argo-workflows-server",
            "ignore_fields": null,
            "kind": "VirtualService",
            "live_manifest_incluster": "e3c3657a83107af2f39809be713bc2978dd1b6b7481b703de2437a719e7dfb41",
            "live_uid": "87a98952-9244-4f6f-8e0a-fea67fe55c16",
            "name": "argo-workflows-server",
            "namespace": "argo-workflows",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "87a98952-9244-4f6f-8e0a-fea67fe55c16",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: argo-workflows-server\n  namespace: argo-workflows\nspec:\n  hosts:\n  - argo-workflows.homelab.msfidelis.com.br\n  gateways:\n  -  argo-workflows-server\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: argo-workflows-server\n        port:\n          number: 2746\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: argo-workflows-server\n  namespace: argo-workflows\nspec:\n  gateways:\n  - argo-workflows-server\n  hosts:\n  - argo-workflows.homelab.msfidelis.com.br\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: argo-workflows-server\n        port:\n          number: 2746\n",
            "yaml_incluster": "e3c3657a83107af2f39809be713bc2978dd1b6b7481b703de2437a719e7dfb41"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argo_workflows"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "argocd_virtual_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/argocd/virtualservices/argo-server",
            "ignore_fields": null,
            "kind": "VirtualService",
            "live_manifest_incluster": "1d58f0419441f1c2f4cb093c8805518b4eb18b6f6b16a2867b37faaf376ee333",
            "live_uid": "01357954-8bb2-4f81-a3d7-794d719ba7cd",
            "name": "argo-server",
            "namespace": "argocd",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "01357954-8bb2-4f81-a3d7-794d719ba7cd",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: argo-server\n  namespace: argocd\nspec:\n  hosts:\n  - argocd.homelab.msfidelis.com.br\n  gateways:\n  - argocd-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: argocd-server\n        port:\n          number: 80\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: argo-server\n  namespace: argocd\nspec:\n  gateways:\n  - argocd-gateway\n  hosts:\n  - argocd.homelab.msfidelis.com.br\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: argocd-server\n        port:\n          number: 80\n",
            "yaml_incluster": "1d58f0419441f1c2f4cb093c8805518b4eb18b6f6b16a2867b37faaf376ee333"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "kiali_gateway",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/istio-system/gateways/kiali-gateway",
            "ignore_fields": null,
            "kind": "Gateway",
            "live_manifest_incluster": "49ecbdb8c992033df643f09e4545164239aeee0808a19006fed9334d147fbad6",
            "live_uid": "f61bbe4b-0ad5-4a18-bd88-24c2e2bd116a",
            "name": "kiali-gateway",
            "namespace": "istio-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "f61bbe4b-0ad5-4a18-bd88-24c2e2bd116a",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: kiali-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway \n  servers:\n  - port:\n      number: 80\n      name: http\n      protocol: HTTP\n    hosts:\n    - kiali.homelab.msfidelis.com.br\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: Gateway\nmetadata:\n  name: kiali-gateway\n  namespace: istio-system\nspec:\n  selector:\n    istio: ingressgateway\n  servers:\n  - hosts:\n    - kiali.homelab.msfidelis.com.br\n    port:\n      name: http\n      number: 80\n      protocol: HTTP\n",
            "yaml_incluster": "49ecbdb8c992033df643f09e4545164239aeee0808a19006fed9334d147fbad6"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod",
            "helm_release.kiali-server"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "kiali_virtual_service",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.istio.io/v1alpha3",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.istio.io/v1alpha3/namespaces/istio-system/virtualservices/kiali",
            "ignore_fields": null,
            "kind": "VirtualService",
            "live_manifest_incluster": "158eefe71f77a4a0465028100c0caee3314cf719c4b22a53d8a29282cba9bb76",
            "live_uid": "7f73ab9a-4882-41b6-9062-044f0b231a9f",
            "name": "kiali",
            "namespace": "istio-system",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "7f73ab9a-4882-41b6-9062-044f0b231a9f",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: kiali\n  namespace: istio-system\nspec:\n  hosts:\n  - kiali.homelab.msfidelis.com.br\n  gateways:\n  - kiali-gateway\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: kiali\n        port:\n          number: 20001\n",
            "yaml_body_parsed": "apiVersion: networking.istio.io/v1alpha3\nkind: VirtualService\nmetadata:\n  name: kiali\n  namespace: istio-system\nspec:\n  gateways:\n  - kiali-gateway\n  hosts:\n  - kiali.homelab.msfidelis.com.br\n  http:\n  - match:\n    - uri:\n        prefix: /\n    route:\n    - destination:\n        host: kiali\n        port:\n          number: 20001\n",
            "yaml_incluster": "158eefe71f77a4a0465028100c0caee3314cf719c4b22a53d8a29282cba9bb76"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "live_manifest_incluster"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_body"
              }
            ],
            [
              {
                "type": "get_attr",
                "value": "yaml_incluster"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "helm_release.istio_base",
            "helm_release.istiod",
            "helm_release.kiali-server"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
