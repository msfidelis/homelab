app:
  name: nginx
  image: nginx:latest
  namespace: test
  iam: ""
  capacity:
    requests: 
      cpu: 100m
      memory: 128Mi
    limits: 
      cpu: 200m
      memory: 256Mi
    autoscaling: {}
    min: 1
    max: 10
  version: v3
  rollout:
    strategy:
      canary:
      #   steps:
      #   - setWeight: 20
      #   - pause: { duration: 10 }
      #   - setWeight: 40
      #   - pause: { duration: 10 }
      #   - setWeight: 60
      #   - pause: { duration: 10 }
      #   - setWeight: 80
      #   - pause: { duration: 10 }
      #   - setWeight: 100

    analysisTemplates:
    - name: 'istio-success'
      spec:
        metrics:
        - name: success-rate
          interval: 2m
          successCondition: result[0] >= 0.95
          failureLimit: 1
          provider:
            prometheus:
              address: <http://prometheus-kube-prometheus-prometheus.prometheus.svc.cluster.local:9090>
              query: |
                sum(irate(
                  istio_requests_total{destination_service=~"nginx.test.svc.cluster.local",response_code!~"5.*"}[5m]
                )) /
                sum(irate(
                  istio_requests_total{destination_service=~"nginx.test.svc.cluster.local"}[5m]
                ))
          count: 1 


  envs:
    - name: FOO
      value: "bar"
    - name: PING
      value: "pong"

  port:
    name: web
    port: 80
    protocol: TCP
    targetPort: 80
  service:
    type: ClusterIP
  istio:
    gateway: 
      selector: ingressgateway
      # HTTP, HTTP2, GRPC, GRPC-WEB, MONGO, REDIS, MYSQL, TCP
      protocol: HTTP 
      port: 80
    host: nginx.k8s.raj.ninja
    virtualService:
      http:
        enabled: true
        retries:
          attempts: 1
          perTryTimeout: 500ms
          retryOn: refused-stream
      mirror:
        enabled: false
        host: nginx-v2.k8s.raj.ninja
        port: 80
        percent: 1
    destinationRule:
      enabled: false
      host: ""
      loadBalancer:
        enabled: true
        simple: ROUND_ROBIN
      connectionPool:
        enabled: true
        tcp:
          enabled: true
          maxConnections: 100
          connectTimeout: 1s
          tcpKeepalive:
            time: 30s
            interval: 5s
        http:
          enabled: true
          http1MaxPendingRequests: 100
          http2MaxRequests: 100
          maxRequestsPerConnection: 100
          maxRetries: 2
      outlierDetection:
        enabled: true
        consecutive5xxErrors: 2
        interval: 300ms
        baseEjectionTime: 60s
        maxEjectionPercent: 100

  prometheus:
    scrape: "true"
    port: 80
    path: /metrics

  probes:
    livenessProbe:
      enabled: true
      failureThreshold: 10
      periodSeconds: 10
      httpGet:
        path: /
        port: 80
    startupProbe:
      enabled: true
      failureThreshold: 10
      periodSeconds: 10
      httpGet:
        path: /
        port: 80
  

kubernetesClusterDomain: cluster.local
